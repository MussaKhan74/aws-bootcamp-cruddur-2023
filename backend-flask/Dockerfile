# USE PYTHON FOR THE INSTALLATION INSIDE THE CONTAINER
FROM 297477473306.dkr.ecr.us-east-1.amazonaws.com/cruddur-python:3.10-slim-buster


# WORKING DIRECTORY STRUCTURE INSIDE THE OS OF DOCKER CONTAINER
WORKDIR /backend-flask


# COPY "requirements.txt" FILE FROM THE CURRENT DIRECTORY "./backend-flask" AND PASTE IT INSIDE THE 
# "./backend-flask" WORKING DIRECTORY OF DOCKER CONTAINER
COPY requirements.txt requirements.txt

# INSTALL THE DEPENDENCIES INSIDE THE "requirements.txt" FILE IN THE DOCKER CONTAINER
RUN pip3 install -r requirements.txt

# COPY ALL THE CURRENT DIRECTORY DATA OF HOST OS INTO OS OF DOCKER CONTAINER
COPY . .

# SETTING ENVIRONMENT VARIABLE 
ENV FLASK_DEBUG=1

# EXPOSING PORT WHICH IS GOING TO BE USED BY APPLICATION INSIDE THE DOCKER CONTAINER
EXPOSE ${PORT}

# RUN THIS COMMANDS INSIDE THE CLI OF DOCKER CONTAINER
CMD [ "python3", "-m" , "flask", "run", "--host=0.0.0.0", "--port=4567"]

# TO BUILD THIS DockerFile IMAGE WE WILL cd .. INTO PROJECT DIRECTORY AND RUN
# "docker build -t backend-flask ./backend-flask"

# TO RUN THIS IMAGE WE WILL NEED TO TYPE "docker run --rm -p 4567:4567 -it -e FRONTEND_URL
# -e BACKEND_URL backend-flask"

# "docker images" TO SEE YOUR DOCKER IMAGES
# "docker ps" TO SHOW RUNNING CONTAINERS
# "docker ps -a" WILL SHOW CONTAINERS WHICH WERE BUILT WITH --rm FLAG
